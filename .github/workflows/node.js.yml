# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [16.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm i
#     - run: npm run build --if-present
#     - run: npm test
    
#     - uses: awact/s3-action@master
#       with:
#         args: --acl public-read --follow-symlinks --delete
#       env:
#         SOURCE_DIR: './build'
#         AWS_REGION: 'ap-northeast-2'
#         AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

name: CI/CD Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Set environment variables
        run: |
          echo "VITE_ID=${{ secrets.VITE_ID }}" >> .env
          echo "VITE_PW=${{ secrets.VITE_PW }}" >> .env

      - name: Build project
        run: npm run build -- --mode production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: Deploy to S3
        run: aws s3 sync ./build s3://${{ secrets.S3_BUCKET_NAME }}  --delete

      - name: CloudFront Invalidate Cache
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID}} \
          --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
